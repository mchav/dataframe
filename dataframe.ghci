:set -XOverloadedStrings
:set -XTypeApplications
:set -XTemplateHaskell

import qualified Data.Text as T
import           DataFrame.Functions (declareColumns)
import           Data.Text (Text)
import           DataFrame ((|>))
import           Data.Int
import           Data.Time

import qualified DataFrame as D
import qualified DataFrame.Functions as F

default (Int, T.Text, Double)

:def! exposeColumns \s -> return ("_ = (); declareColumns " ++ s)

__brightBlue s = "\ESC[94m" ++ s ++ "\ESC[0m"
__brightGreen s = "\ESC[92m" ++ s ++ "\ESC[0m"

putStrLn "========================================"
putStrLn ("              üì¶" ++ (__brightBlue "Dataframe"))
putStrLn "========================================"
putStrLn ""
putStrLn "‚ú®  Modules were automatically imported."
putStrLn ""
putStrLn "üí°  Use prefix 'D' for core functionality."
putStrLn ("        ‚óè E.g. " ++ (__brightGreen "D.readCsv \"/path/to/file\""))
putStrLn "üí°  Use prefix 'F' for expression functions."
putStrLn ("        ‚óè E.g. " ++ (__brightGreen "F.sum (F.col @Int \"value\")"))
putStrLn ""
putStrLn "‚úÖ Ready."
